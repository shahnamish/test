version: '3.9'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  fluentd:
    image: fluent/fluentd:v1.16-debian
    volumes:
      - ./config/logging/fluentd.conf:/fluentd/etc/fluent.conf
      - logs:/var/log/application
      - audit-logs:/var/log/audit
    ports:
      - "24224:24224"
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:v2.48.0
    volumes:
      - ./config/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/monitoring/security_rules.yml:/etc/prometheus/security_rules.yml
      - ./config/monitoring/compliance_rules.yml:/etc/prometheus/compliance_rules.yml
    ports:
      - "9090:9090"

  alertmanager:
    image: prom/alertmanager:v0.26.0
    volumes:
      - ./config/monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ENABLE_KRAFT=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - kafka-data:/bitnami/kafka

  ws-realtime:
    build:
      context: ../services/ws_realtime
    environment:
      - WS_AUTH_SECRET=dev-secret
      - WS_KAFKA_BROKERS=kafka:9092
      - WS_KAFKA_GROUP_ID=ws-realtime-compose
      - WS_KAFKA_TOPICS=lines,order_book,analytics
      - WS_ALLOWED_ORIGINS=http://localhost:3000
      - WS_CLIENT_BUFFER=512
    ports:
      - "8080:8080"
    depends_on:
      - kafka

  audit-service:
    build:
      context: ..
      dockerfile: Dockerfile.audit
    depends_on:
      - fluentd
    environment:
      - LOG_LEVEL=INFO

volumes:
  elasticsearch-data:
  grafana-data:
  logs:
  audit-logs:
  kafka-data:
